const config = require('../config');
const moment = require('moment-timezone');
const { cmd, commands } = require('../command');
const axios = require('axios');

cmd({
    pattern: "menu",
    alias: ["allmenu", "‚ùÑÔ∏è"],
    use: '.menu',
    desc: "Show all bot commands",
    category: "menu",
    react: "‚ùÑÔ∏è",
    filename: __filename
}, async (conn, mek, m, { from, reply }) => {
    try {
        const totalCommands = commands.length;
        const date = moment().tz("America/Port-au-Prince").format("dddd, DD MMMM YYYY");
        const time = moment().tz("America/Port-au-Prince").format("HH:mm:ss");
        const uptime = () => {
            let sec = process.uptime();
            let h = Math.floor(sec / 3600);
            let m = Math.floor((sec % 3600) / 60);
            let s = Math.floor(sec % 60);
            return `${h}h ${m}m ${s}s`;
        };

        const pushwish = (time < "05:00:00") ? "Good Morning üåÑ" :
                         (time < "11:00:00") ? "Good Morning üåÑ" :
                         (time < "15:00:00") ? "Good Afternoon üåÖ" :
                         (time < "19:00:00") ? "Good Evening üåÉ" : "Good Night üåå";

        // En-t√™te
        let menuText = `‚ï≠‚ïê‚ïê‚ïê ùêåùêÑùêÜùêÄùêãùêéùêÉùêéùêç-ùêåùêÉ ‚ïê‚ïê‚ïê‚ä∑
‚îÉ‚ùÉ‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÉ‚ùÉ‚îÇ Prefix : *[${config.PREFIX}]*
‚îÉ‚ùÉ‚îÇ User : *${m.pushName}*
‚îÉ‚ùÉ‚îÇ Mode : *${config.MODE}*
‚îÉ‚ùÉ‚îÇ Date : *${date}*
‚îÉ‚ùÉ‚îÇ Time : *${time}*
‚îÉ‚ùÉ‚îÇ Plugin : *${totalCommands}*
‚îÉ‚ùÉ‚îÇ Uptime : *${uptime()}*
‚îÉ‚ùÉ‚îÇ Dev : ùêÉùêòùêÅùêò ùêìùêÑùêÇùêá
‚îÉ‚ùÉ‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑

> ${pushwish} *@${m.sender.split("@")[0]}*

${String.fromCharCode(8206).repeat(4001)}`

        // G√©n√©ration des cat√©gories
        const category = {};
        for (const cmd of commands) {
            if (!cmd.category) continue;
            if (!category[cmd.category]) category[cmd.category] = [];
            category[cmd.category].push(cmd);
        }

        const keys = Object.keys(category).sort();
        for (const k of keys) {
            menuText += `\n\n‚ï≠‚îÅ‚îÄ‚îÄ„Äî *${k.toUpperCase()}* „Äï‚îÄ‚îÄ`;
            const cmds = category[k].sort((a, b) => (a.pattern || '').localeCompare(b.pattern || ''));
            cmds.forEach(cmd => {
                const usage = cmd.pattern.split('|')[0];
                menuText += `\n‚îÉ ‚¨° ${config.PREFIX}${usage}`;
            });
            menuText += `\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùí`;
        }

        // Chargement thumbnail
        const imageUrl = 'https://files.catbox.moe/rful77.jpg';
        const imageBuffer = await axios.get(imageUrl, { responseType: 'arraybuffer' }).then(res => res.data);

        await conn.sendMessage(from, {
            image: { url: imageUrl, thumbnail: imageBuffer },
            caption: menuText,
            contextInfo: {
                mentionedJid: [m.sender]
            }
        }, { quoted: mek });

    } catch (e) {
        console.error(e);
        reply(`‚ùå Erreur dans le menu : ${e.message}`);
    }
});
